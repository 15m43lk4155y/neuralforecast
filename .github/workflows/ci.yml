name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v1
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('action_files/environment.yml') }}

      - name: Set up environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: pytorch,conda-forge,defaults
          channel-priority: true
          activate-environment: neuralforecast
          environment-file: action_files/environment.yml
          use-only-tar-bz2: true

      - name: Install library
        shell: bash -l {0}
        run: pip install .

      - name: Read all notebooks
        shell: bash -l {0}
        run: nbdev_read_nbs

      - name: Check if all notebooks are cleaned
        shell: bash -l {0}
        run: |
          echo "Check we are starting with clean git checkout"
          if [ -n "$(git status -uno -s)" ]; then echo "git status is not clean"; false; fi
          echo "Trying to strip out notebooks"
          nbdev_clean_nbs
          echo "Check that strip out was unnecessary"
          git status -s # display the status to see which nbs need cleaning up
          if [ -n "$(git status -uno -s)" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi

      - name: Check if there is no diff library/notebooks
        shell: bash -l {0}
        run: |
          if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi

      - name: Run tests
        shell: bash -l {0}
        run: |
          nbdev_test_nbs --fname "nbs/data_datasets__*"
          nbdev_test_nbs --timing
  
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: Set up environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.7
          mamba-version: "*"
          channels: pytorch,conda-forge,defaults
          channel-priority: true
          activate-environment: neuralforecast
          environment-file: action_files/environment.yml
          use-only-tar-bz2: true

      - name: Run coverage
        run: pytest action_files/test_nbs.py --cov=neuralforecast --cov-report xml

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          files: coverage.xml
        
